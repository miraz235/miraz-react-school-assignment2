{"version":3,"sources":["components/ErrorBoundary.js","components/SearchInput.js","components/Modal/ModalContent.js","components/Modal/index.js","components/Login/LoginForm.js","components/Login/LoginModal.js","components/Login/index.js","components/AppHeader.js","components/ProductApp/ProductCard.js","components/ProductApp/ProductList.js","components/ProductApp/index.js","components/App.js","serviceWorker.js","index.js"],"names":["ErrorBoundary","state","hasError","error","info","this","react_default","a","createElement","props","children","React","Component","SearchInput","_ref","onSearchChange","type","placeholder","onChange","event","target","value","ModalContent","content","modalRef","onClickAway","onClose","isOpen","ReactDOM","createPortal","className","tabIndex","role","aria-labelledby","aria-hidden","onClick","ref","cloneElement","document","body","Modal","modalNode","Fragment","Modal_ModalContent","n","e","contains","LoginForm","id","data-dismiss","aria-label","htmlFor","LoginModal","open","show","hide","components_Modal","onOpen","Login_LoginForm","Login","loggedin","_this","setState","logout","getButton","Login_LoginModal","AppHeader","components_SearchInput","components_Login","ProductCard","product","onChangeVote","title","image","desc","category","vote","src","alt","ProductList","products","productsHtml","map","i","key","style","zIndex","ProductApp_ProductCard","react_flip_move_es","staggerDurationBy","duration","enterAnimation","leaveAnimation","typeName","productsData","require","ProductApp","filterKey","componentDidMount","getSortedProductsWithVote","setFilteredProduct","searchKey","componentWillReceiveProps","nextProps","sort","b","toLowerCase","filter","indexOf","isUp","p","ProductApp_ProductList","bind","App","header","_this2","components_AppHeader","onSearch","components_ErrorBoundary","components_ProductApp_ProductApp","Boolean","window","location","hostname","match","render","src_components_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.eca2e562.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nclass ErrorBoundary extends React.Component {\r\n    state = { hasError: false };\r\n    static getDerivedStateFromError(error) {\r\n        // Update state so the next render will show the fallback UI.\r\n        return { hasError: true }\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        // You can also log the error to an error reporting service\r\n        // logErrorToMyService(error, info);\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            // You can render any custom fallback UI\r\n            return <h1>Something went wrong.</h1>\r\n        }\r\n\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary","import React from 'react';\r\n\r\nconst SearchInput = ({onSearchChange}) => {\r\n    return <input type=\"search\" placeholder=\"Search...\" onChange={event => onSearchChange(event.target.value)} />\r\n}\r\nexport default SearchInput;","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\n\r\nconst ModalContent = ({ content, modalRef, onClickAway, onClose, isOpen }) => {\r\n    return ReactDOM.createPortal(\r\n        <aside\r\n            className={isOpen ? \"modal fade show\" : \"modal fade\"}\r\n            tabIndex=\"-1\"\r\n            role=\"dialog\"\r\n            aria-labelledby=\"exampleModalLabel\"\r\n            aria-hidden=\"true\"\r\n            onClick={onClickAway}\r\n        >\r\n            <div className=\"modal-dialog\" role=\"document\" ref={modalRef}>\r\n                <div className=\"modal-content\">\r\n                    {React.cloneElement(content, { onClose })}\r\n                </div>\r\n            </div>\r\n        </aside>,\r\n        document.body\r\n    )\r\n}\r\n\r\nexport default ModalContent","import React from \"react\";\r\nimport './Modal.css';\r\nimport ModalContent from \"./ModalContent\"\r\n\r\nconst Modal = ({ isOpen, onClose, children }) => {\r\n\r\n    let modalNode;\r\n    const onClickAway = e => {\r\n        if (modalNode && modalNode.contains(e.target)) return;\r\n        onClose()\r\n    }\r\n   \r\n    return (\r\n      <>\r\n        {isOpen && (\r\n          <ModalContent\r\n            modalRef={n => (modalNode = n)}\r\n            content={children}\r\n            onClickAway={onClickAway}\r\n            onClose={onClose}\r\n            isOpen={isOpen}\r\n          />\r\n        )}\r\n      </>\r\n    )\r\n  \r\n}\r\n\r\nexport default Modal","import React from \"react\"\r\n\r\nconst LoginForm = ({onClose}) => {\r\n    return (\r\n        <div>\r\n            <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n                    Login\r\n                    </h5>\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"close\"\r\n                    data-dismiss=\"modal\"\r\n                    aria-label=\"Close\"\r\n                    onClick={onClose}\r\n                >\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n                <form>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"recipient-name\" className=\"col-form-label\">Name:</label>\r\n                        <input type=\"text\" className=\"form-control\" id=\"recipient-name\" />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"recipient-password\" className=\"col-form-label\">Password:</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            id=\"recipient-password\"\r\n                        />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n                <button type=\"button\" className=\"button\">\r\n                    Login\r\n                    </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginForm","import React from \"react\"\r\nimport Modal from \"../Modal\"\r\nimport LoginForm from \"./LoginForm\"\r\n\r\nconst LoginModal = ({ open, show, hide }) => {\r\n  return (\r\n    <Modal isOpen={open} onOpen={show} onClose={hide}>\r\n      <LoginForm />\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default LoginModal","import React, {Component} from 'react';\r\nimport LoginModal from './LoginModal';\r\n\r\nclass Login extends Component {\r\n    state = { \r\n        open: false,\r\n        loggedin: false\r\n    };\r\n    show = () => {\r\n        this.setState({ open: true });\r\n    }\r\n    hide = () => {\r\n        this.setState({ open: false });\r\n    }\r\n    logout = () => {\r\n        this.setState({ loggedin: false });\r\n    }\r\n    getButton = () => {\r\n        return this.state.loggedin ? \r\n                    <button className=\"button\" onClick={this.logout}>Logout</button> : \r\n                    <button className=\"button\" onClick={this.show}>Login</button>\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                { this.getButton() }               \r\n                <LoginModal open={this.state.open} hide={this.hide} show={this.show} />\r\n            </>\r\n        )\r\n    }\r\n}\r\nexport default Login; ","import React from 'react';\r\nimport SearchInput from './SearchInput';\r\nimport Login from './Login'\r\n\r\nconst AppHeader = (props) => {\r\n    return (\r\n        <header className=\"header container\">\r\n            <h2>Product App</h2>\r\n            \r\n            <SearchInput onSearchChange={props.onSearchChange}  />\r\n            <Login />\r\n            \r\n        </header>\r\n    );\r\n};\r\n\r\nexport default AppHeader;","import React from 'react';\r\n\r\nconst ProductCard = ({product, onChangeVote}) => {\r\n    const {title, image, desc, category, vote} = product;\r\n    return (\r\n        <div className=\"product\">\r\n            <div className=\"thumbnail\">\r\n                <img src={image} alt={title} />\r\n            </div>\r\n            <div className=\"content\">\r\n                <h3>{title}</h3>\r\n                <p>{desc}</p>\r\n                <div className=\"cat\">{category}</div>\r\n            </div>\r\n            <div className=\"button-box\">\r\n                <button onClick={event=>onChangeVote(product, true)}>&#x290A;</button>\r\n                <div><strong>{vote}</strong></div>\r\n                <button onClick={event=>onChangeVote(product)}>&#x290B;</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProductCard;","import React from 'react';\r\nimport ProductCard from './ProductCard'\r\nimport FlipMove from 'react-flip-move';\r\n\r\nconst ProductList = ({products, onChangeVote}) => {\r\n    let productsHtml = products.map((product, i) => <li key={product.id} style={{ zIndex: 100 - i }}><ProductCard product={product} onChangeVote={onChangeVote} /></li> )\r\n    return (\r\n        <FlipMove \r\n            staggerDurationBy=\"30\"\r\n            duration={500}\r\n            enterAnimation=\"accordionVertical\" \r\n            leaveAnimation=\"accordionVertical\"\r\n            typeName=\"ul\" \r\n            className=\"product-list\">{productsHtml}</FlipMove>\r\n    );\r\n};\r\n\r\nexport default ProductList;","import React, {Component} from 'react'\r\nimport './ProductApp.css'\r\nimport ProductList from './ProductList'\r\n\r\nconst productsData = require('./products.json')\r\n\r\nexport default class ProductApp extends Component{\r\n    products = [];\r\n    state = {\r\n        products: [],\r\n        filterKey: ''\r\n    }\r\n    componentDidMount = () => {\r\n        this.getSortedProductsWithVote(productsData);\r\n        this.setFilteredProduct(this.props.searchKey || '');\r\n    }\r\n    componentWillReceiveProps = (nextProps) => {\r\n        if(nextProps.searchKey !== this.state.filterKey)\r\n            this.setFilteredProduct(nextProps.searchKey)\r\n    }\r\n    getSortedProductsWithVote(products) {\r\n        this.products = products.sort(function(a, b){\r\n            return b.vote - a.vote\r\n        })\r\n    }\r\n    setFilteredProduct(filterKey) {\r\n        filterKey = filterKey.toLowerCase();\r\n        this.setState({ products: filterKey ? this.products.filter( product => product.title.toLowerCase().indexOf(filterKey) > -1 ) : this.products, filterKey });\r\n    }\r\n\r\n    onChangeVote(product, isUp) {\r\n        if(isUp)\r\n            product.vote++;\r\n        else if(product.vote > 0)\r\n            product.vote--;\r\n            //this.products = this.products.filter(p => p.id !== product.id)\r\n        this.getSortedProductsWithVote(this.products.map(p => p.id === product.id ? product : p));\r\n        this.setFilteredProduct(this.props.searchKey || '');\r\n    }\r\n    render() {\r\n        return (\r\n          <div className=\"page-container\">\r\n            <div className=\"container\">\r\n                <ProductList products={this.state.products} onChangeVote={this.onChangeVote.bind(this)}  />\r\n            </div>\r\n          </div>\r\n        )\r\n      }\r\n}","import React, { Component } from 'react';\nimport ErrorBoundary from './ErrorBoundary';\nimport './App.css';\nimport AppHeader from './AppHeader';\nimport ProductApp from './ProductApp';\n\nclass App extends Component {\n  state = {\n    header: {\n      searchKey: ''\n    }\n  };\n  onSearch(searchKey) {\n    this.setState({ header: { searchKey } });\n  }\n  render() {\n    return (\n      <div className=\"wrapper\">\n          <AppHeader onSearchChange={key => this.onSearch(key)} />\n          <ErrorBoundary>\n            <ProductApp searchKey={this.state.header.searchKey} />\n          </ErrorBoundary>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}