{"version":3,"sources":["components/ErrorBoundary.js","components/SearchInput.js","components/Modal/ModalContent.js","components/Modal/index.js","components/Login/LoginForm.js","components/Login/LoginModal.js","components/contexts/Auth.js","components/Login/LoginButton.js","components/AppHeader.js","components/ProductApp/ProductCard.js","components/ProductApp/ProductList.js","components/ProductApp/index.js","components/App.js","serviceWorker.js","index.js"],"names":["ErrorBoundary","state","hasError","error","info","this","react_default","a","createElement","props","children","React","Component","SearchInput","_ref","onSearchChange","type","placeholder","onChange","event","target","value","ModalContent","content","modalRef","onClickAway","onClose","isOpen","ReactDOM","createPortal","className","tabIndex","role","aria-labelledby","aria-hidden","onClick","ref","cloneElement","document","body","Modal","modalNode","Fragment","Modal_ModalContent","n","e","contains","LoginForm","Auth","context","id","data-dismiss","aria-label","name","onSubmit","preventDefault","updateAuthState","loginform","username","htmlFor","required","LoginModal","open","show","hide","components_Modal","onOpen","Login_LoginForm","initState","user","isloggedin","modalOpen","AuthContext","createContext","AuthProvider","_this","setState","prevState","Object","objectSpread","showModal","hideModal","Provider","Login_LoginModal","LoginButton","concat","AppHeader","components_SearchInput","Login_LoginButton","ProductCard","product","onChangeVote","title","image","desc","category","vote","src","alt","ProductList","products","productsHtml","map","i","key","style","zIndex","ProductApp_ProductCard","react_flip_move_es","staggerDurationBy","duration","enterAnimation","leaveAnimation","typeName","productsData","require","ProductApp","filterKey","componentDidMount","getSortedProductsWithVote","setFilteredProduct","searchKey","componentWillReceiveProps","nextProps","isUp","p","sort","b","toLowerCase","filter","indexOf","_this2","ProductApp_ProductList","App","header","components_AppHeader","onSearch","components_ErrorBoundary","components_ProductApp_ProductApp","Boolean","window","location","hostname","match","render","src_components_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.11180f58.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nclass ErrorBoundary extends React.Component {\r\n    state = { hasError: false };\r\n    static getDerivedStateFromError(error) {\r\n        // Update state so the next render will show the fallback UI.\r\n        return { hasError: true }\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        // You can also log the error to an error reporting service\r\n        // logErrorToMyService(error, info);\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            // You can render any custom fallback UI\r\n            return <h1>Something went wrong.</h1>\r\n        }\r\n\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary","import React from 'react';\r\n\r\nconst SearchInput = ({onSearchChange}) => {\r\n    return <input type=\"search\" placeholder=\"Search...\" onChange={event => onSearchChange(event.target.value)} />\r\n}\r\nexport default SearchInput;","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\n\r\nconst ModalContent = ({ content, modalRef, onClickAway, onClose, isOpen }) => {\r\n    return ReactDOM.createPortal(\r\n        <aside\r\n            className={isOpen ? \"modal show\" : \"modal\"}\r\n            tabIndex=\"-1\"\r\n            role=\"dialog\"\r\n            aria-labelledby=\"exampleModalLabel\"\r\n            aria-hidden=\"true\"\r\n            onClick={onClickAway}\r\n        >\r\n            <div className=\"modal-dialog\" role=\"document\" ref={modalRef}>\r\n                <div className=\"modal-content\">\r\n                    {React.cloneElement(content, { onClose })}\r\n                </div>\r\n            </div>\r\n        </aside>,\r\n        document.body\r\n    )\r\n}\r\n\r\nexport default ModalContent","import React from \"react\";\r\nimport './Modal.css';\r\nimport ModalContent from \"./ModalContent\"\r\n\r\nconst Modal = ({ isOpen, onClose, children }) => {\r\n\r\n    let modalNode;\r\n    const onClickAway = e => {\r\n        if (modalNode && modalNode.contains(e.target)) return;\r\n        onClose()\r\n    }\r\n   \r\n    return (\r\n      <>\r\n        {isOpen && (\r\n          <ModalContent\r\n            modalRef={n => (modalNode = n)}\r\n            content={children}\r\n            onClickAway={onClickAway}\r\n            onClose={onClose}\r\n            isOpen={isOpen}\r\n          />\r\n        )}\r\n      </>\r\n    )\r\n  \r\n}\r\n\r\nexport default Modal","import React from \"react\"\r\nimport Auth from '../contexts/Auth';\r\n\r\nconst LoginForm = ({onClose}) => {\r\n    return (\r\n        <Auth>\r\n            { \r\n                (context) => {\r\n                    return (\r\n                        <div>\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Login</h5>\r\n                                <button\r\n                                    type=\"button\"\r\n                                    className=\"close\"\r\n                                    data-dismiss=\"modal\"\r\n                                    aria-label=\"Close\"\r\n                                    onClick={onClose}\r\n                                >\r\n                                    <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                            </div>\r\n                            <form name=\"loginform\" onSubmit={(e) => {\r\n                                    e.preventDefault();\r\n                                    context.updateAuthState(true, document.loginform.username.value);\r\n                                    onClose()\r\n                                }}>\r\n                                <div className=\"modal-body\">\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"recipient-name\" className=\"col-form-label\">Name:</label>\r\n                                        <input type=\"text\" className=\"form-control\" id=\"user-name\" name=\"username\" required />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"recipient-password\" className=\"col-form-label\" name=\"password\">Password:</label>\r\n                                        <input\r\n                                            type=\"password\"\r\n                                            className=\"form-control\"\r\n                                            id=\"recipient-password\"\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button type=\"submit\" className=\"button\">Login</button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n        </Auth>\r\n    )\r\n}\r\n\r\nexport default LoginForm","import React from \"react\"\r\nimport Modal from \"../Modal\"\r\nimport LoginForm from \"./LoginForm\"\r\n\r\nconst LoginModal = ({ open, show, hide }) => {\r\n  return (\r\n    <Modal isOpen={open} onOpen={show} onClose={hide}>\r\n      <LoginForm />\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default LoginModal","import React, {createContext, Component} from 'react';\r\nimport LoginModal from '../Login/LoginModal';\r\n\r\nconst initState = {\r\n    user: '',\r\n    isloggedin: false,\r\n    modalOpen: false\r\n}\r\n\r\nconst AuthContext = createContext(initState);\r\n\r\nexport default AuthContext.Consumer;\r\n\r\nclass AuthController extends Component {\r\n    state = {...initState};\r\n\r\n    updateAuthState = (isloggedin, user) => {\r\n        this.setState((prevState) => ({ ...prevState, isloggedin, user }));\r\n    }\r\n\r\n    showModal = () => {\r\n        this.setState((prevState) => ({ ...prevState, modalOpen: true }));\r\n    }\r\n    hideModal = () => {\r\n        this.setState((prevState) => ({ ...prevState, modalOpen: false }));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <AuthContext.Provider value={{state: this.state, updateAuthState: this.updateAuthState, showModal: this.showModal, hideModal: this.hideModal}}>\r\n                {this.props.children}\r\n                <LoginModal open={this.state.modalOpen} hide={this.hideModal} show={this.showModal} />\r\n            </AuthContext.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport const AuthProvider = AuthController;","import React from 'react';\r\nimport Auth from '../contexts/Auth';\r\n\r\nconst LoginButton  = (props) => {\r\n    return (\r\n        <>\r\n            <Auth>\r\n                {\r\n                    (context) => {\r\n                        return context.state.isloggedin ? \r\n                            <div>{context.state.user ? `Welcome ${context.state.user}` : ''} \r\n                                <button className=\"button\" onClick={() => context.updateAuthState(false)}>Logout</button></div> : \r\n                            <button className=\"button\" onClick={context.showModal}>Login</button>\r\n                    }\r\n                }\r\n            </Auth>         \r\n        </>\r\n    )\r\n}\r\nexport default LoginButton; ","import React from 'react';\r\nimport SearchInput from './SearchInput';\r\nimport LoginButton from './Login/LoginButton'\r\n\r\nconst AppHeader = (props) => {\r\n    return (\r\n        <header className=\"header container\">\r\n            <h2>Product App</h2>\r\n            \r\n            <SearchInput onSearchChange={props.onSearchChange}  />\r\n            <LoginButton />\r\n            \r\n        </header>\r\n    );\r\n};\r\n\r\nexport default AppHeader;","import React from 'react';\r\n\r\nconst ProductCard = ({product, onChangeVote}) => {\r\n    const {title, image, desc, category, vote} = product;\r\n    return (\r\n        <div className=\"product\">\r\n            <div className=\"thumbnail\">\r\n                <img src={image} alt={title} />\r\n            </div>\r\n            <div className=\"content\">\r\n                <h3>{title}</h3>\r\n                <p>{desc}</p>\r\n                <div className=\"cat\">{category}</div>\r\n            </div>\r\n            <div className=\"button-box\">\r\n                <button onClick={event=>onChangeVote(product, true)}>&#x290A;</button>\r\n                <div><strong>{vote}</strong></div>\r\n                <button onClick={event=>onChangeVote(product)}>&#x290B;</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProductCard;","import React from 'react';\r\nimport ProductCard from './ProductCard'\r\nimport FlipMove from 'react-flip-move';\r\n\r\nconst ProductList = ({products, onChangeVote}) => {\r\n    let productsHtml = products.map((product, i) => <li key={product.id} style={{ zIndex: 100 - i }}><ProductCard product={product} onChangeVote={onChangeVote} /></li> )\r\n    return (\r\n        <FlipMove \r\n            staggerDurationBy=\"30\"\r\n            duration={500}\r\n            enterAnimation=\"accordionVertical\" \r\n            leaveAnimation=\"accordionVertical\"\r\n            typeName=\"ul\" \r\n            className=\"product-list\">{productsHtml}</FlipMove>\r\n    );\r\n};\r\n\r\nexport default ProductList;","import React, {Component} from 'react'\r\nimport './ProductApp.css'\r\nimport Auth from '../contexts/Auth';\r\nimport ProductList from './ProductList'\r\n\r\nconst productsData = require('./products.json')\r\n\r\nexport default class ProductApp extends Component{\r\n    products = [];\r\n    state = {\r\n        products: [],\r\n        filterKey: ''\r\n    };\r\n    componentDidMount = () => {\r\n        this.getSortedProductsWithVote(productsData);\r\n        this.setFilteredProduct(this.props.searchKey || '');\r\n    }\r\n    componentWillReceiveProps = (nextProps) => {\r\n        if(nextProps.searchKey !== this.state.filterKey)\r\n            this.setFilteredProduct(nextProps.searchKey)\r\n    }\r\n    getSortedProductsWithVote(products) {\r\n        this.products = products.sort(function(a, b){\r\n            return b.vote - a.vote\r\n        })\r\n    }\r\n    setFilteredProduct(filterKey) {\r\n        filterKey = filterKey.toLowerCase();\r\n        this.setState({ products: filterKey ? this.products.filter( product => product.title.toLowerCase().indexOf(filterKey) > -1 ) : this.products, filterKey });\r\n    }\r\n\r\n    onChangeVote = (product, isUp) => {\r\n        if(isUp)\r\n            product.vote++;\r\n        else if(product.vote > 0)\r\n            product.vote--;\r\n            //this.products = this.products.filter(p => p.id !== product.id)\r\n        this.getSortedProductsWithVote(this.products.map(p => p.id === product.id ? product : p));\r\n        this.setFilteredProduct(this.props.searchKey || '');\r\n    }\r\n    render() {\r\n        return (\r\n          <div className=\"page-container\">\r\n            <div className=\"container\">\r\n                <Auth>\r\n                    {(context) => {\r\n                        return <ProductList products={this.state.products} onChangeVote={context.state.isloggedin ? this.onChangeVote : context.showModal} />\r\n                    }}\r\n                </Auth>\r\n            </div>\r\n          </div>\r\n        )\r\n      }\r\n}","import React, { Component } from 'react';\r\nimport ErrorBoundary from './ErrorBoundary';\r\nimport './App.css';\r\nimport AppHeader from './AppHeader';\r\nimport ProductApp from './ProductApp';\r\n\r\nimport {AuthProvider} from './contexts/Auth';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    header: {\r\n      searchKey: ''\r\n    }\r\n  };\r\n  onSearch(searchKey) {\r\n    this.setState({ header: { searchKey } });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <AuthProvider>\r\n            <AppHeader onSearchChange={key => this.onSearch(key)} />\r\n\r\n            <ErrorBoundary>\r\n              <ProductApp searchKey={this.state.header.searchKey} />\r\n            </ErrorBoundary>\r\n        </AuthProvider>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}